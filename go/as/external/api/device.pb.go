// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/device.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/clodpi/platform-api/go/v3/common"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Device struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=UUID,proto3" json:"dev_eui,omitempty"`
	// Name of the device (if left blank, it will be set to the DevEUI).
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Device is onboarded to respective server.
	IsOnboarded bool `protobuf:"varint,4,opt,name=is_onboarded,json=isOnboarded,proto3" json:"is_onboarded,omitempty"`
	// Device is agateway.
	IsGateway bool `protobuf:"varint,5,opt,name=is_gateway,json=isGateway,proto3" json:"is_gateway,omitempty"`
	// Device is onboarding server internal or external.
	IsOnboardingServerExternal bool `protobuf:"varint,6,opt,name=is_onboarding_server_external,json=isOnboardingServerExternal,proto3" json:"is_onboarding_server_external,omitempty"`
	// Device is mode of communication like LoRaWAN, MQTT, GSM, TCP, CoAP.
	Communication string `protobuf:"bytes,7,opt,name=communication,proto3" json:"communication,omitempty"`
	// Device type like WaterMeter, TempSensor, Energy Meter.
	Type string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	// Variables (user defined).
	// These variables can be used together with integrations to store tokens /
	// secrets that must be configured per device. These variables are not
	// exposed in the event payloads.
	Variables map[string]string `protobuf:"bytes,9,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Tags (user defined).
	// These tags are exposed in the event payloads or to integration. Tags are
	// intended for aggregation and filtering.
	Tags map[string]string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{0}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Device) GetIsOnboarded() bool {
	if m != nil {
		return m.IsOnboarded
	}
	return false
}

func (m *Device) GetIsGateway() bool {
	if m != nil {
		return m.IsGateway
	}
	return false
}

func (m *Device) GetIsOnboardingServerExternal() bool {
	if m != nil {
		return m.IsOnboardingServerExternal
	}
	return false
}

func (m *Device) GetCommunication() string {
	if m != nil {
		return m.Communication
	}
	return ""
}

func (m *Device) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Device) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *Device) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Device) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Device) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type DeviceListItem struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=UUID,proto3" json:"dev_eui,omitempty"`
	// Name of the device.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the device.
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceListItem) Reset()         { *m = DeviceListItem{} }
func (m *DeviceListItem) String() string { return proto.CompactTextString(m) }
func (*DeviceListItem) ProtoMessage()    {}
func (*DeviceListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{1}
}

func (m *DeviceListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceListItem.Unmarshal(m, b)
}
func (m *DeviceListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceListItem.Marshal(b, m, deterministic)
}
func (m *DeviceListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceListItem.Merge(m, src)
}
func (m *DeviceListItem) XXX_Size() int {
	return xxx_messageInfo_DeviceListItem.Size(m)
}
func (m *DeviceListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceListItem.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceListItem proto.InternalMessageInfo

func (m *DeviceListItem) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DeviceListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceListItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type DeviceProfile struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=UUID,proto3" json:"dev_eui,omitempty"`
	// profile json
	Profile              string   `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceProfile) Reset()         { *m = DeviceProfile{} }
func (m *DeviceProfile) String() string { return proto.CompactTextString(m) }
func (*DeviceProfile) ProtoMessage()    {}
func (*DeviceProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{2}
}

func (m *DeviceProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceProfile.Unmarshal(m, b)
}
func (m *DeviceProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceProfile.Marshal(b, m, deterministic)
}
func (m *DeviceProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceProfile.Merge(m, src)
}
func (m *DeviceProfile) XXX_Size() int {
	return xxx_messageInfo_DeviceProfile.Size(m)
}
func (m *DeviceProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceProfile.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceProfile proto.InternalMessageInfo

func (m *DeviceProfile) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DeviceProfile) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

type CreateDeviceRequest struct {
	// Device object to create.
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceRequest) Reset()         { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()    {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{3}
}

func (m *CreateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRequest.Unmarshal(m, b)
}
func (m *CreateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRequest.Merge(m, src)
}
func (m *CreateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRequest.Size(m)
}
func (m *CreateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRequest proto.InternalMessageInfo

func (m *CreateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type GetDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRequest) Reset()         { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()    {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{4}
}

func (m *GetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRequest.Unmarshal(m, b)
}
func (m *GetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRequest.Merge(m, src)
}
func (m *GetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRequest.Size(m)
}
func (m *GetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRequest proto.InternalMessageInfo

func (m *GetDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceResponse struct {
	// Device object.
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceResponse) Reset()         { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()    {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{5}
}

func (m *GetDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResponse.Unmarshal(m, b)
}
func (m *GetDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResponse.Merge(m, src)
}
func (m *GetDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResponse.Size(m)
}
func (m *GetDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResponse proto.InternalMessageInfo

func (m *GetDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type ListDeviceRequest struct {
	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Search on name or DevEUI.
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	// Tags to filter on.
	Tags                 map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceRequest) Reset()         { *m = ListDeviceRequest{} }
func (m *ListDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeviceRequest) ProtoMessage()    {}
func (*ListDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{6}
}

func (m *ListDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceRequest.Unmarshal(m, b)
}
func (m *ListDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ListDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceRequest.Merge(m, src)
}
func (m *ListDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceRequest.Size(m)
}
func (m *ListDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceRequest proto.InternalMessageInfo

func (m *ListDeviceRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListDeviceRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListDeviceRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ListDeviceRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ListDeviceResponse struct {
	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Devices within this result-set.
	Result               []*DeviceListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceResponse) Reset()         { *m = ListDeviceResponse{} }
func (m *ListDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeviceResponse) ProtoMessage()    {}
func (*ListDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{7}
}

func (m *ListDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceResponse.Unmarshal(m, b)
}
func (m *ListDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceResponse.Marshal(b, m, deterministic)
}
func (m *ListDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceResponse.Merge(m, src)
}
func (m *ListDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeviceResponse.Size(m)
}
func (m *ListDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceResponse proto.InternalMessageInfo

func (m *ListDeviceResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListDeviceResponse) GetResult() []*DeviceListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type DeleteDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=UUID,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceRequest) Reset()         { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()    {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{8}
}

func (m *DeleteDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceRequest.Merge(m, src)
}
func (m *DeleteDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceRequest.Size(m)
}
func (m *DeleteDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceRequest proto.InternalMessageInfo

func (m *DeleteDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type UpdateDeviceRequest struct {
	// Device object to update.
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceRequest) Reset()         { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()    {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{9}
}

func (m *UpdateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRequest.Merge(m, src)
}
func (m *UpdateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRequest.Size(m)
}
func (m *UpdateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRequest proto.InternalMessageInfo

func (m *UpdateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type CreateDeviceProfileRequest struct {
	// Device-keys object to create.
	DeviceProfile        *DeviceProfile `protobuf:"bytes,1,opt,name=device_profile,json=deviceProfile,proto3" json:"device_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateDeviceProfileRequest) Reset()         { *m = CreateDeviceProfileRequest{} }
func (m *CreateDeviceProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceProfileRequest) ProtoMessage()    {}
func (*CreateDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{10}
}

func (m *CreateDeviceProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceProfileRequest.Unmarshal(m, b)
}
func (m *CreateDeviceProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceProfileRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeviceProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceProfileRequest.Merge(m, src)
}
func (m *CreateDeviceProfileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceProfileRequest.Size(m)
}
func (m *CreateDeviceProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceProfileRequest proto.InternalMessageInfo

func (m *CreateDeviceProfileRequest) GetDeviceProfile() *DeviceProfile {
	if m != nil {
		return m.DeviceProfile
	}
	return nil
}

type GetDeviceProfileRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=UUID,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceProfileRequest) Reset()         { *m = GetDeviceProfileRequest{} }
func (m *GetDeviceProfileRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceProfileRequest) ProtoMessage()    {}
func (*GetDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{11}
}

func (m *GetDeviceProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceProfileRequest.Unmarshal(m, b)
}
func (m *GetDeviceProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceProfileRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceProfileRequest.Merge(m, src)
}
func (m *GetDeviceProfileRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceProfileRequest.Size(m)
}
func (m *GetDeviceProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceProfileRequest proto.InternalMessageInfo

func (m *GetDeviceProfileRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceProfileResponse struct {
	// Device-key object.
	DeviceProfile        *DeviceProfile `protobuf:"bytes,1,opt,name=device_profile,json=deviceProfile,proto3" json:"device_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetDeviceProfileResponse) Reset()         { *m = GetDeviceProfileResponse{} }
func (m *GetDeviceProfileResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceProfileResponse) ProtoMessage()    {}
func (*GetDeviceProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{12}
}

func (m *GetDeviceProfileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceProfileResponse.Unmarshal(m, b)
}
func (m *GetDeviceProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceProfileResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceProfileResponse.Merge(m, src)
}
func (m *GetDeviceProfileResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceProfileResponse.Size(m)
}
func (m *GetDeviceProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceProfileResponse proto.InternalMessageInfo

func (m *GetDeviceProfileResponse) GetDeviceProfile() *DeviceProfile {
	if m != nil {
		return m.DeviceProfile
	}
	return nil
}

type UpdateDeviceProfileRequest struct {
	// Device-keys object to update.
	DeviceProfile        *DeviceProfile `protobuf:"bytes,1,opt,name=device_profile,json=deviceProfile,proto3" json:"device_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateDeviceProfileRequest) Reset()         { *m = UpdateDeviceProfileRequest{} }
func (m *UpdateDeviceProfileRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceProfileRequest) ProtoMessage()    {}
func (*UpdateDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{13}
}

func (m *UpdateDeviceProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceProfileRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceProfileRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceProfileRequest.Merge(m, src)
}
func (m *UpdateDeviceProfileRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceProfileRequest.Size(m)
}
func (m *UpdateDeviceProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceProfileRequest proto.InternalMessageInfo

func (m *UpdateDeviceProfileRequest) GetDeviceProfile() *DeviceProfile {
	if m != nil {
		return m.DeviceProfile
	}
	return nil
}

type DeleteDeviceProfileRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=UUID,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceProfileRequest) Reset()         { *m = DeleteDeviceProfileRequest{} }
func (m *DeleteDeviceProfileRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceProfileRequest) ProtoMessage()    {}
func (*DeleteDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{14}
}

func (m *DeleteDeviceProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceProfileRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceProfileRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceProfileRequest.Merge(m, src)
}
func (m *DeleteDeviceProfileRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceProfileRequest.Size(m)
}
func (m *DeleteDeviceProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceProfileRequest proto.InternalMessageInfo

func (m *DeleteDeviceProfileRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func init() {
	proto.RegisterType((*Device)(nil), "api.Device")
	proto.RegisterMapType((map[string]string)(nil), "api.Device.TagsEntry")
	proto.RegisterMapType((map[string]string)(nil), "api.Device.VariablesEntry")
	proto.RegisterType((*DeviceListItem)(nil), "api.DeviceListItem")
	proto.RegisterType((*DeviceProfile)(nil), "api.DeviceProfile")
	proto.RegisterType((*CreateDeviceRequest)(nil), "api.CreateDeviceRequest")
	proto.RegisterType((*GetDeviceRequest)(nil), "api.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "api.GetDeviceResponse")
	proto.RegisterType((*ListDeviceRequest)(nil), "api.ListDeviceRequest")
	proto.RegisterMapType((map[string]string)(nil), "api.ListDeviceRequest.TagsEntry")
	proto.RegisterType((*ListDeviceResponse)(nil), "api.ListDeviceResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "api.DeleteDeviceRequest")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "api.UpdateDeviceRequest")
	proto.RegisterType((*CreateDeviceProfileRequest)(nil), "api.CreateDeviceProfileRequest")
	proto.RegisterType((*GetDeviceProfileRequest)(nil), "api.GetDeviceProfileRequest")
	proto.RegisterType((*GetDeviceProfileResponse)(nil), "api.GetDeviceProfileResponse")
	proto.RegisterType((*UpdateDeviceProfileRequest)(nil), "api.UpdateDeviceProfileRequest")
	proto.RegisterType((*DeleteDeviceProfileRequest)(nil), "api.DeleteDeviceProfileRequest")
}

func init() {
	proto.RegisterFile("as/external/api/device.proto", fileDescriptor_57ec3c2ed36f7cf9)
}

var fileDescriptor_57ec3c2ed36f7cf9 = []byte{
	// 987 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x56, 0x9a, 0x34, 0xd9, 0x9c, 0xb4, 0xd5, 0x76, 0xda, 0x4d, 0x2d, 0x6f, 0x43, 0x83, 0x97,
	0x8b, 0xd2, 0x85, 0x18, 0xb5, 0x0b, 0x74, 0x2b, 0x2e, 0x28, 0xdb, 0xaa, 0xaa, 0x00, 0x81, 0xb2,
	0x0d, 0x2b, 0xad, 0x84, 0xa2, 0x49, 0x3c, 0xf1, 0x0e, 0xb5, 0x3d, 0xc6, 0x33, 0x0e, 0x44, 0xc0,
	0x0d, 0xaf, 0xc0, 0x0b, 0xf0, 0x38, 0xdc, 0xf3, 0x0a, 0x88, 0xe7, 0x40, 0xf3, 0xe3, 0xae, 0xe3,
	0xc4, 0xec, 0xef, 0x55, 0x33, 0x67, 0xce, 0xf9, 0xbe, 0xf3, 0x9d, 0x1f, 0x4f, 0x61, 0x17, 0x73,
	0x97, 0xfc, 0x2c, 0x48, 0x12, 0xe1, 0xc0, 0xc5, 0x31, 0x75, 0x3d, 0x32, 0xa5, 0x63, 0xd2, 0x8b,
	0x13, 0x26, 0x18, 0xaa, 0xe2, 0x98, 0xda, 0xbb, 0x3e, 0x63, 0x7e, 0x40, 0xd4, 0x2d, 0x8e, 0x22,
	0x26, 0xb0, 0xa0, 0x2c, 0xe2, 0xda, 0xc5, 0xde, 0x33, 0xb7, 0xea, 0x34, 0x4a, 0x27, 0xae, 0xa0,
	0x21, 0xe1, 0x02, 0x87, 0xb1, 0x71, 0xb8, 0x5b, 0x74, 0x20, 0x61, 0x2c, 0x66, 0xe6, 0x72, 0x6b,
	0xcc, 0xc2, 0x90, 0x45, 0xae, 0xfe, 0xa3, 0x8d, 0xce, 0xbf, 0x35, 0xa8, 0x9f, 0xa9, 0x34, 0xd0,
	0x1d, 0x68, 0x78, 0x64, 0x3a, 0x24, 0x29, 0xb5, 0x2a, 0xdd, 0xca, 0x7e, 0xb3, 0x5f, 0x1b, 0x0c,
	0x2e, 0xcf, 0x10, 0x82, 0x5a, 0x84, 0x43, 0x62, 0xad, 0x68, 0x9b, 0xfc, 0x8d, 0xba, 0xd0, 0xf2,
	0x08, 0x1f, 0x27, 0x34, 0x96, 0xe9, 0x59, 0x55, 0x75, 0x95, 0x37, 0xa1, 0x77, 0x61, 0x8d, 0xf2,
	0x21, 0x8b, 0x46, 0x0c, 0x27, 0x1e, 0xf1, 0xac, 0x5a, 0xb7, 0xb2, 0x7f, 0xab, 0xdf, 0xa2, 0xfc,
	0x9b, 0xcc, 0x84, 0x3a, 0x00, 0x94, 0x0f, 0x7d, 0x2c, 0xc8, 0x4f, 0x78, 0x66, 0xad, 0x2a, 0x87,
	0x26, 0xe5, 0x17, 0xda, 0x80, 0x4e, 0xa1, 0xf3, 0x1c, 0x81, 0x46, 0xfe, 0x90, 0x93, 0x64, 0x4a,
	0x92, 0x61, 0x56, 0x41, 0xab, 0xae, 0x22, 0xec, 0x1b, 0x48, 0x1a, 0xf9, 0x8f, 0x95, 0xcb, 0xb9,
	0xf1, 0x40, 0xef, 0xc1, 0xba, 0x14, 0x9b, 0x46, 0x74, 0xac, 0xea, 0x68, 0x35, 0x54, 0xa2, 0xf3,
	0x46, 0x29, 0x50, 0xcc, 0x62, 0x62, 0xdd, 0xd2, 0x02, 0xe5, 0x6f, 0x74, 0x0c, 0xcd, 0x29, 0x4e,
	0x28, 0x1e, 0x05, 0x84, 0x5b, 0xcd, 0x6e, 0x75, 0xbf, 0x75, 0x68, 0xf7, 0x70, 0x4c, 0x7b, 0xba,
	0x56, 0xbd, 0xef, 0xb2, 0xcb, 0xf3, 0x48, 0x24, 0xb3, 0xfe, 0x73, 0x67, 0xf4, 0x3e, 0xd4, 0x04,
	0xf6, 0xb9, 0x05, 0x2a, 0xe8, 0x4e, 0x3e, 0xe8, 0x0a, 0xfb, 0xc6, 0x5f, 0xb9, 0xa0, 0x87, 0x00,
	0xe3, 0x84, 0x60, 0x41, 0xbc, 0x21, 0x16, 0x56, 0xab, 0x5b, 0x51, 0x2c, 0xba, 0x85, 0xbd, 0xac,
	0x85, 0xbd, 0xab, 0xac, 0xc7, 0xfd, 0xa6, 0xf1, 0x3e, 0x15, 0x32, 0x34, 0x8d, 0xbd, 0x2c, 0x74,
	0xed, 0xc5, 0xa1, 0xc6, 0xfb, 0x54, 0xd8, 0x9f, 0xc1, 0xc6, 0x7c, 0xf6, 0xe8, 0x36, 0x54, 0xaf,
	0xc9, 0xcc, 0x34, 0x5d, 0xfe, 0x44, 0xdb, 0xb0, 0x3a, 0xc5, 0x41, 0x9a, 0x35, 0x5d, 0x1f, 0x4e,
	0x56, 0x8e, 0x2b, 0xf6, 0xa7, 0xd0, 0xbc, 0x91, 0xf1, 0x2a, 0x81, 0xce, 0xf7, 0xb0, 0xa1, 0xcb,
	0xf0, 0x15, 0xe5, 0xe2, 0x52, 0x90, 0xf0, 0xad, 0xce, 0x9b, 0xf3, 0x39, 0xac, 0x6b, 0xf8, 0x6f,
	0x13, 0x36, 0xa1, 0x41, 0xe9, 0x34, 0x5b, 0xd0, 0x88, 0xb5, 0x87, 0x21, 0xc8, 0x8e, 0xce, 0x09,
	0x6c, 0x3d, 0x52, 0xf5, 0xd5, 0x38, 0x7d, 0xf2, 0x63, 0x4a, 0xb8, 0x40, 0xf7, 0xa0, 0xae, 0xd7,
	0x54, 0xc1, 0xb4, 0x0e, 0x5b, 0xb9, 0x8e, 0xf6, 0xcd, 0x95, 0x73, 0x1f, 0x6e, 0x5f, 0x10, 0x31,
	0x1f, 0xb8, 0x53, 0x4c, 0x40, 0x3a, 0x9f, 0x0f, 0x2e, 0x9d, 0x63, 0xd8, 0xcc, 0x39, 0xf3, 0x98,
	0x45, 0x9c, 0xbc, 0x1c, 0xcd, 0x5f, 0x15, 0xd8, 0x94, 0xe5, 0x9b, 0x27, 0xda, 0x86, 0xd5, 0x80,
	0x86, 0x54, 0xa8, 0xc8, 0x6a, 0x5f, 0x1f, 0x50, 0x1b, 0xea, 0x6c, 0x32, 0xe1, 0x44, 0x28, 0x9d,
	0xd5, 0xbe, 0x39, 0x49, 0x3b, 0x27, 0x38, 0x19, 0x3f, 0x33, 0x55, 0x34, 0x27, 0xf4, 0xc0, 0xcc,
	0x6d, 0x4d, 0xcd, 0x6d, 0x57, 0xd1, 0x2f, 0x70, 0x15, 0x47, 0xf8, 0xf5, 0xc7, 0x61, 0x04, 0x28,
	0x8f, 0x6e, 0xaa, 0xb0, 0x07, 0x2d, 0xc1, 0x04, 0x0e, 0x86, 0x63, 0x96, 0x46, 0x99, 0x20, 0x50,
	0xa6, 0x47, 0xd2, 0x82, 0xee, 0x43, 0x3d, 0x21, 0x3c, 0x0d, 0xa4, 0x2a, 0x99, 0xe7, 0x56, 0xae,
	0x4c, 0xd9, 0x60, 0xf5, 0x8d, 0x8b, 0xf3, 0x01, 0x6c, 0x9d, 0x91, 0x80, 0x14, 0x3b, 0xba, 0x7c,
	0x32, 0x64, 0xff, 0x07, 0x6a, 0x49, 0x5e, 0xa3, 0xff, 0x4f, 0xc0, 0xce, 0xcf, 0x8e, 0x99, 0xc1,
	0x0c, 0xe2, 0x21, 0x6c, 0x68, 0xbf, 0x61, 0x36, 0x7a, 0x1a, 0x0a, 0xe5, 0xa0, 0xb2, 0x90, 0x75,
	0x2f, 0x7f, 0x74, 0x3e, 0x82, 0x9d, 0x9b, 0x59, 0x29, 0xa0, 0x96, 0xc8, 0x18, 0x80, 0xb5, 0x18,
	0x61, 0xca, 0xfb, 0x06, 0x89, 0x3c, 0x01, 0x3b, 0x5f, 0x9d, 0xb7, 0xa7, 0xf0, 0x08, 0xec, 0x7c,
	0x93, 0x5e, 0x4a, 0xe4, 0xe1, 0x9f, 0x8d, 0x6c, 0xdd, 0xe5, 0x17, 0x5f, 0x3e, 0x5e, 0x8f, 0xa1,
	0xae, 0x3b, 0x80, 0x2c, 0xc5, 0xb9, 0x64, 0x95, 0xed, 0xf6, 0xc2, 0x07, 0xf2, 0x5c, 0x3e, 0x8f,
	0xce, 0xce, 0xef, 0x7f, 0xff, 0xf3, 0xc7, 0xca, 0xa6, 0xb3, 0x96, 0x7b, 0x94, 0xf9, 0x49, 0xe5,
	0x00, 0x5d, 0x41, 0xf5, 0x82, 0x08, 0xa4, 0x3f, 0xe2, 0xc5, 0x05, 0xb7, 0xdb, 0x45, 0xb3, 0xae,
	0xb2, 0xf3, 0x8e, 0x82, 0xb3, 0x50, 0x3b, 0x0f, 0xe7, 0xfe, 0x62, 0x74, 0xfc, 0x86, 0xbe, 0x86,
	0x9a, 0x1c, 0x55, 0xd4, 0x5e, 0xbe, 0x63, 0xf6, 0xce, 0x82, 0xdd, 0x00, 0x6f, 0x2b, 0xe0, 0x0d,
	0x34, 0x97, 0x27, 0x7a, 0x2a, 0x1f, 0x70, 0x59, 0x40, 0xa3, 0x7c, 0xc9, 0xc8, 0x97, 0x2a, 0x37,
	0xa9, 0x1e, 0x94, 0xa5, 0xea, 0x41, 0x5d, 0x77, 0xdd, 0x60, 0x2f, 0x59, 0x90, 0x52, 0xec, 0x7d,
	0x85, 0xed, 0xd8, 0x9d, 0x05, 0x6c, 0xf9, 0x16, 0x66, 0x14, 0xb2, 0xcc, 0xbf, 0x02, 0xe8, 0x76,
	0x7d, 0x49, 0x66, 0x1c, 0xed, 0x2d, 0xf4, 0x6f, 0x7e, 0x26, 0x4a, 0x09, 0x3f, 0x56, 0x84, 0xae,
	0x73, 0xb0, 0x8c, 0x30, 0x1b, 0xcc, 0x1b, 0x62, 0xf7, 0x9a, 0xcc, 0x54, 0x93, 0xaf, 0xa1, 0x71,
	0x41, 0x84, 0xa2, 0xde, 0x9d, 0xef, 0x68, 0x81, 0xb7, 0x53, 0x72, 0x6b, 0xba, 0x73, 0x4f, 0xd1,
	0x77, 0xd0, 0xdd, 0xe5, 0xb5, 0x54, 0x7c, 0x52, 0xaa, 0xae, 0x61, 0x4e, 0x6a, 0xf9, 0x5e, 0xbd,
	0x48, 0xaa, 0xfd, 0x8a, 0x52, 0x7f, 0x00, 0xd0, 0xd3, 0x91, 0x63, 0x2f, 0x5f, 0xbe, 0x52, 0x76,
	0xa3, 0xf4, 0xe0, 0xff, 0x94, 0x7e, 0xf1, 0xc9, 0xd3, 0x07, 0x3e, 0x15, 0xcf, 0xd2, 0x51, 0x6f,
	0xcc, 0x42, 0x77, 0x1c, 0x30, 0x2f, 0xa6, 0x6e, 0x1c, 0x60, 0x31, 0x61, 0x49, 0xf8, 0xa1, 0x0c,
	0xf4, 0x99, 0x3b, 0x3d, 0x72, 0x0b, 0xff, 0x13, 0x8f, 0xea, 0x8a, 0xec, 0xe8, 0xbf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xb8, 0xf5, 0x66, 0x47, 0x2d, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	// Create creates the given device.
	Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get returns the device matching the given DevEUI.
	Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
	// List returns the available devices.
	List(ctx context.Context, in *ListDeviceRequest, opts ...grpc.CallOption) (*ListDeviceResponse, error)
	// Delete deletes the device matching the given DevEUI.
	Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update updates the device matching the given DevEUI.
	Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateKeys creates the given device-keys.
	CreateKeys(ctx context.Context, in *CreateDeviceProfileRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetKeys returns the device-keys for the given DevEUI.
	GetKeys(ctx context.Context, in *GetDeviceProfileRequest, opts ...grpc.CallOption) (*GetDeviceProfileResponse, error)
	// UpdateKeys updates the device-keys.
	UpdateKeys(ctx context.Context, in *UpdateDeviceProfileRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// DeleteKeys deletes the device-keys for the given DevEUI.
	DeleteKeys(ctx context.Context, in *DeleteDeviceProfileRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type deviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeviceServiceClient(cc grpc.ClientConnInterface) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) List(ctx context.Context, in *ListDeviceRequest, opts ...grpc.CallOption) (*ListDeviceResponse, error) {
	out := new(ListDeviceResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) CreateKeys(ctx context.Context, in *CreateDeviceProfileRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/CreateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetKeys(ctx context.Context, in *GetDeviceProfileRequest, opts ...grpc.CallOption) (*GetDeviceProfileResponse, error) {
	out := new(GetDeviceProfileResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/GetKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) UpdateKeys(ctx context.Context, in *UpdateDeviceProfileRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/UpdateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) DeleteKeys(ctx context.Context, in *DeleteDeviceProfileRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/DeleteKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	// Create creates the given device.
	Create(context.Context, *CreateDeviceRequest) (*empty.Empty, error)
	// Get returns the device matching the given DevEUI.
	Get(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
	// List returns the available devices.
	List(context.Context, *ListDeviceRequest) (*ListDeviceResponse, error)
	// Delete deletes the device matching the given DevEUI.
	Delete(context.Context, *DeleteDeviceRequest) (*empty.Empty, error)
	// Update updates the device matching the given DevEUI.
	Update(context.Context, *UpdateDeviceRequest) (*empty.Empty, error)
	// CreateKeys creates the given device-keys.
	CreateKeys(context.Context, *CreateDeviceProfileRequest) (*empty.Empty, error)
	// GetKeys returns the device-keys for the given DevEUI.
	GetKeys(context.Context, *GetDeviceProfileRequest) (*GetDeviceProfileResponse, error)
	// UpdateKeys updates the device-keys.
	UpdateKeys(context.Context, *UpdateDeviceProfileRequest) (*empty.Empty, error)
	// DeleteKeys deletes the device-keys for the given DevEUI.
	DeleteKeys(context.Context, *DeleteDeviceProfileRequest) (*empty.Empty, error)
}

// UnimplementedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServiceServer struct {
}

func (*UnimplementedDeviceServiceServer) Create(ctx context.Context, req *CreateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDeviceServiceServer) Get(ctx context.Context, req *GetDeviceRequest) (*GetDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDeviceServiceServer) List(ctx context.Context, req *ListDeviceRequest) (*ListDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedDeviceServiceServer) Delete(ctx context.Context, req *DeleteDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedDeviceServiceServer) Update(ctx context.Context, req *UpdateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDeviceServiceServer) CreateKeys(ctx context.Context, req *CreateDeviceProfileRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) GetKeys(ctx context.Context, req *GetDeviceProfileRequest) (*GetDeviceProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) UpdateKeys(ctx context.Context, req *UpdateDeviceProfileRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) DeleteKeys(ctx context.Context, req *DeleteDeviceProfileRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKeys not implemented")
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Create(ctx, req.(*CreateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Get(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).List(ctx, req.(*ListDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Delete(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Update(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_CreateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).CreateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/CreateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).CreateKeys(ctx, req.(*CreateDeviceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/GetKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetKeys(ctx, req.(*GetDeviceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_UpdateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).UpdateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/UpdateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).UpdateKeys(ctx, req.(*UpdateDeviceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_DeleteKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).DeleteKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/DeleteKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).DeleteKeys(ctx, req.(*DeleteDeviceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DeviceService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DeviceService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _DeviceService_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DeviceService_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DeviceService_Update_Handler,
		},
		{
			MethodName: "CreateKeys",
			Handler:    _DeviceService_CreateKeys_Handler,
		},
		{
			MethodName: "GetKeys",
			Handler:    _DeviceService_GetKeys_Handler,
		},
		{
			MethodName: "UpdateKeys",
			Handler:    _DeviceService_UpdateKeys_Handler,
		},
		{
			MethodName: "DeleteKeys",
			Handler:    _DeviceService_DeleteKeys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/device.proto",
}
